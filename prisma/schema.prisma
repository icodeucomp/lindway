// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String                  @id @default(cuid())
  email         String                  @unique
  username      String                  @unique
  password      String
  role          Role                    @default(ADMIN)
  isActive      Boolean                 @default(true)
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt

  @@map("users")
}

model Product {
  id                   String           @id @default(cuid())
  name                 String
  description          String
  notes                String
  sizes                Json[] 
  price                Decimal          @db.Decimal(10, 2)
  discount             Int       
  discountedPrice      Decimal          @db.Decimal(10, 2)
  category             Categories       @default(MY_LINDWAY)
  images               Json[]        
  stock                Int              @default(0)
  sku                  String           @unique
  productionNotes      String?       
  isPreOrder           Boolean          @default(false)
  isActive             Boolean          @default(true)
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt

  cartItems            Cart[]

  @@map("products")
}

model Guest {
  id                   String           @id @default(cuid())
  email                String
  fullname             String
  whatsappNumber       String
  address              String
  postalCode           Int
  isMember             Boolean          @default(false)
  receiptImage         Json?     
  instagram            String?
  reference            String?
  isPurchased          Boolean          @default(false)
  paymentMethod        PaymentMethod    @default(BANK_TRANSFER)
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  
  cartItems            Cart[]
  
  @@map("guests")
}

model Cart {
  id                   String           @id @default(cuid())
  quantity             Int
  selectedSize         String
  productId            String
  guestId              String 
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  
  product              Product          @relation(fields: [productId], references: [id])
  guest                Guest            @relation(fields: [guestId], references: [id])
  
  @@map("carts")
}

model Parameter {
  id                   String           @id @default(cuid())
  shipping             Int
  tax                  Int
  promo                Int
  memberDiscount       Int
  qrisImage            Json?  
  video                Json[]

  @@map("parameters")
}

enum Role {
  SUPER_ADMIN
  ADMIN
}

enum PaymentMethod { 
  BANK_TRANSFER
  QRIS
}

enum Categories {
  MY_LINDWAY            @map("my lindway")
  LURE_BY_LINDWAY       @map("lure by lindway")
  SIMPLY_LINDWAY        @map("simply lindway")
}